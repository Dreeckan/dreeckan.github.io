(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{402:function(e,t,r){"use strict";r.r(t);var i=r(31),o=Object(i.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"mise-en-commun-du-travail"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mise-en-commun-du-travail"}},[e._v("#")]),e._v(" Mise en commun du travail")]),e._v(" "),r("p",[e._v("Introduction en vid√©o :")]),e._v(" "),r("div",{staticStyle:{position:"relative","padding-bottom":"56.25%",height:"0"}},[r("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.loom.com/embed/b3e98e3f1df34ddfa2cf73f94b49b449",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e._v(" "),r("p",[e._v("Pour la plupart des projets, le travail de groupe est primordial. Git nous permet de grandement le simplifier, mais le faire en ligne de commande serait bien p√©nible.")]),e._v(" "),r("p",[e._v("C'est pour √ßa (et bien d'autres choses) que des outils en ligne existent, tels que :")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.github.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://bitbucket.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitBucket"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://gitlab.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitLab"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("et s√ªrement bien d'autres !")])]),e._v(" "),r("p",[e._v("Nous allons nous concentrer sur le premier, car le plus r√©pandu, mais sachez que GitLab et BitBucket peuvent √™tre install√©s gratuitement sur un serveur priv√© (c'est ce que nous avons fait chez "),r("a",{attrs:{href:"https://www.drakolab.fr",target:"_blank",rel:"noopener noreferrer"}},[e._v("Drakona"),r("OutboundLink")],1),e._v(" üòâ ).")]),e._v(" "),r("p",[e._v("Je vous conseille donc de cr√©er au moins un compte sur "),r("a",{attrs:{href:"https://www.github.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),r("OutboundLink")],1),e._v(", qui pourra √©galement vous servir de portfolio ou de carte de visite !")]),e._v(" "),r("h2",{attrs:{id:"creer-un-repository-distant"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#creer-un-repository-distant"}},[e._v("#")]),e._v(" Cr√©er un repository distant")]),e._v(" "),r("p",[e._v("En vid√©o :")]),e._v(" "),r("div",{staticStyle:{position:"relative","padding-bottom":"56.25%",height:"0"}},[r("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.loom.com/embed/a3220709a8304d1c9f9b98fc1f204a51",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e._v(" "),r("p",[e._v("Pour cr√©er un repository sur GitHub, il suffit d'aller sur "),r("a",{attrs:{href:"https://github.com/new",target:"_blank",rel:"noopener noreferrer"}},[e._v("la page de cr√©ation d'un d√©p√¥t"),r("OutboundLink")],1),e._v(", d'entrer un nom et de d√©cocher les cases... Et tout est pr√™t pour la suite.")]),e._v(" "),r("h2",{attrs:{id:"lier-le-local-et-le-distant"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lier-le-local-et-le-distant"}},[e._v("#")]),e._v(" Lier le local et le distant")]),e._v(" "),r("p",[e._v("En vid√©o :")]),e._v(" "),r("div",{staticStyle:{position:"relative","padding-bottom":"56.25%",height:"0"}},[r("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.loom.com/embed/ba54e2869b2649299a88f5b7a57ac570",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e._v(" "),r("p",[e._v("Si vous avez d√©j√† un d√©p√¥t local "),r("strong",[e._v("non vide")]),e._v(" (avec au moins 1 commit), nous allons associer ce local avec le distant que nous avons cr√©√© sur GitHub avec la commande\n"),r("code",[e._v("git remote add origin git@github.com:cheminDuDepot.git")]),e._v(" o√π "),r("code",[e._v("origin")]),e._v(" est l'alias (ou le nom) du d√©p√¥t distant, pour votre machine et "),r("code",[e._v("git@github.com:cheminDuDepot.git")]),e._v(" le lien SSH vers votre d√©p√¥t distant.")]),e._v(" "),r("p",[e._v("Si vous n'avez qu'un repository distant "),r("strong",[e._v("non vide")]),e._v(" (avec au moins 1 commit), nous pouvons r√©cup√©rer les fichiers "),r("strong",[e._v("et")]),e._v(" lier les deux d√©p√¥ts avec\n"),r("code",[e._v("git clone git@github.com:cheminDuDepot.git")]),e._v(" qui cr√©era un dossier portant le nom du projet, l√† o√π vous vous trouvez.\nDans ce cas, le distant s'appellera origin et sera directement li√© (le dossier est pr√™t √† √™tre utilis√©).")]),e._v(" "),r("p",[e._v("Si vous avez un dossier vide, il faut :")]),e._v(" "),r("ul",[r("li",[e._v("initialiser un d√©p√¥t git avec "),r("code",[e._v("git init")])]),e._v(" "),r("li",[e._v("cr√©er un premier fichier (ou un ensemble de fichiers)")]),e._v(" "),r("li",[e._v("cr√©er un premier commit")]),e._v(" "),r("li",[e._v("lier ce nouveau d√©p√¥t avec le d√©p√¥t distant "),r("code",[e._v("git remote add origin git@github.com:cheminDuDepot.git")])])]),e._v(" "),r("h2",{attrs:{id:"push-et-pull"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#push-et-pull"}},[e._v("#")]),e._v(" Push et pull")]),e._v(" "),r("p",[e._v("En vid√©o :")]),e._v(" "),r("div",{staticStyle:{position:"relative","padding-bottom":"56.25%",height:"0"}},[r("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.loom.com/embed/dc3c6c9609ab48b6824ff7c3eeb69f91",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e._v(" "),r("p",[e._v("Maintenant que nous avons notre d√©p√¥t distant et qu'il est li√© √† notre d√©p√¥t local, il est temps d'envoyer et de r√©cup√©rer des informations vers et depuis celui-ci.")]),e._v(" "),r("p",[e._v("Des commandes courantes :")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("git fetch")]),e._v(" r√©cup√®re les informations "),r("strong",[e._v("sans changer vos fichiers locaux")]),e._v(" (permet simplement d'avoir les informations du distant, s'il y a de nouvelles branches, de nouveaux commits, etc.)")]),e._v(" "),r("li",[r("code",[e._v("git pull origin nomDeLaBranche")]),e._v(" est √† ex√©cuter en √©tant sur la branche "),r("code",[e._v("nomDeLaBranche")]),e._v(" sur votre d√©p√¥t local et permet de la mettre √† jour par rapport √† la branche "),r("code",[e._v("nomDeLaBranche")]),e._v(" du distant (vos fichiers sont modifi√©s et vous r√©cup√©rez les commits du distant)")]),e._v(" "),r("li",[r("code",[e._v("git push origin nomDeLaBranche")]),e._v(" est √† ex√©cuter en √©tant sur la branche "),r("code",[e._v("nomDeLaBranche")]),e._v(" sur votre d√©p√¥t local et permet de mettre √† jour la branche distante avec les commits locaux")]),e._v(" "),r("li",[r("code",[e._v("git push -u origin nomDeLaBranche")]),e._v(" est √† ex√©cuter en √©tant sur la branche "),r("code",[e._v("nomDeLaBranche")]),e._v(" sur votre d√©p√¥t local et permet de mettre √† jour le distant "),r("strong",[e._v("et")]),e._v(" de demander √† Git de retenir le lien entre la branche locale et la branche distante. Avec ce lien, vous pourrez vous contenter de lancer "),r("code",[e._v("git push")]),e._v(" ou "),r("code",[e._v("git pull")]),e._v(" sans plus d'arguments (ce qui simplifie la vie üòâ ).")])]),e._v(" "),r("h2",{attrs:{id:"pull-request-pr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pull-request-pr"}},[e._v("#")]),e._v(" Pull Request (PR)")]),e._v(" "),r("p",[e._v("En vid√©o :")]),e._v(" "),r("div",{staticStyle:{position:"relative","padding-bottom":"56.25%",height:"0"}},[r("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.loom.com/embed/9d97b712d3ab448399f93663ccaaf42f",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e._v(" "),r("p",[e._v("Dans un projet √† plusieurs, personne ne doit modifier directement la branche principale ("),r("code",[e._v("main")]),e._v(" ou "),r("code",[e._v("master")]),e._v(" la plupart du temps), mais on travaille dans des branches s√©par√©es et, lorsqu'elles sont termin√©es, on cr√©e une Pull Request sur le d√©p√¥t distant (GitHub pour nous), que l'on fait relire (v√©rifier) par un coll√®gue jusqu'√† validation. La branche peut alors √™tre fusionn√©e dans la branche principale (ou une autre branche de destination, √ßa arrive aussi). Je vous invite √† plut√¥t regarder la vid√©o, pour des exemples concrets.")]),e._v(" "),r("h2",{attrs:{id:"merge-rebase-conflits"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#merge-rebase-conflits"}},[e._v("#")]),e._v(" Merge, rebase, conflits")]),e._v(" "),r("p",[e._v("Une fois la "),r("abbr",{attrs:{title:"Pull Request"}},[e._v("PR")]),e._v(" faite, relue et qu'il faut la fusionner dans la branche principale, il ne reste plus qu'√† appuyer sur le bouton "),r("code",[e._v("Merge Pull Request")]),e._v(" sur la page GitHub. Malheureusement, si vous √™tes plusieurs √† avoir travaill√© sur les m√™mes fichiers, vous rencontrerez des conflits (Git ne sait pas quelles modifications il doit conserver ou comment les fusionner). Nous allons voir comment les r√©gler, pour permettre la fusion.")]),e._v(" "),r("p",[e._v("En vid√©o :")]),e._v(" "),r("div",{staticStyle:{position:"relative","padding-bottom":"56.25%",height:"0"}},[r("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.loom.com/embed/5b54c6a7fdf840c8bf6cac233af4f0b6",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e._v(" "),r("p",[e._v("La premi√®re √©tape est de retourner sur votre machine, afin de r√©gler les conflits. Pour cela, de nombreuses m√©thodes existent, mais la plus pratique (dans le cadre d'un fonctionnement avec Github) reste d'utiliser la commande "),r("code",[e._v("git rebase")]),e._v(".")]),e._v(" "),r("p",[e._v("Le rebase consiste √† changer le point de d√©part de votre branche (qui avait pour point de d√©part un commit, g√©n√©ralement de la branche principale) vers un autre commit, plus √† jour. Pour avoir un moyen plus visuel de comprendre ce changement, je vous invite √† regarder la vid√©o ci-dessus ou de tester sur un "),r("a",{attrs:{href:"http://git-school.github.io/visualizing-git/#rewritten-history",target:"_blank",rel:"noopener noreferrer"}},[e._v("outil de visualisation de Git"),r("OutboundLink")],1),e._v(", tr√®s pratique pour apprendre (sur l'exemple donn√©, il faut juste lancer la commande "),r("code",[e._v("git rebase master")]),e._v(" pour voir un rebase en action).")]),e._v(" "),r("p",[e._v("Dans la plupart des cas, nous allons faire comme suit (je pars du principe que vous √™tes sur la branche √† rebase) :")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("git checkout main")]),e._v(" pour aller sur la branche principale")]),e._v(" "),r("li",[r("code",[e._v("git pull origin main")]),e._v(" (ou juste "),r("code",[e._v("git pull")]),e._v(") pour la mettre √† jour (et s'assurer d'avoir "),r("strong",[e._v("tous")]),e._v(" les derniers changements)")]),e._v(" "),r("li",[r("code",[e._v("git checkout -")]),e._v(" pour retourner sur la branche de travail")]),e._v(" "),r("li",[r("code",[e._v("git rebase main")]),e._v(" pour lancer le rebase")]),e._v(" "),r("li",[e._v("Il faut maintenant g√©rer les √©ventuels conflits. Git rebase appliquant vos commits un par un, il est possible que vous ayez des conflits pour un ou plusieurs commits, et il faudra r√©p√©ter les op√©rations suivantes :\n"),r("ul",[r("li",[e._v("ouvrir les fichiers concern√©s dans votre "),r("abbr",{attrs:{title:"Integrated Development Environment"}},[e._v("IDE")]),e._v(" et les corriger pour garder la ou les modifications que vous souhaitez conserver")]),e._v(" "),r("li",[e._v("une fois tous les conflits g√©r√©s, utiliser la commande "),r("code",[e._v("git add")]),e._v(" ("),r("code",[e._v("git add .")]),e._v(" ou "),r("code",[e._v("git add nomDuFichier")]),e._v(") pour les ajouter √† l'index, afin de pr√©ciser √† la commande "),r("code",[e._v("rebase")]),e._v(" que les conflits ont √©t√© corrig√©s")]),e._v(" "),r("li",[r("code",[e._v("git rebase --continue")]),e._v(" pour passer au commit suivant")])])]),e._v(" "),r("li",[e._v("Une fois tous les commits appliqu√©s, votre branche locale est √† jour")]),e._v(" "),r("li",[r("code",[e._v("git push --force origin nom-de-votre-branche")]),e._v(" pour mettre √† jour "),r("strong",[e._v("de force")]),e._v(" l'historique de votre branche sur GitHub (ne faites "),r("strong",[e._v("jamais")]),e._v(" cette op√©ration sur la branche principale)")]),e._v(" "),r("li",[e._v("Faites re-faire une relecture rapide de votre "),r("abbr",{attrs:{title:"Pull Request"}},[e._v("PR")]),e._v(", pour vous assurer que tout est toujours bon")]),e._v(" "),r("li",[e._v("Vous pouvez fusionner ou faire fusionner votre "),r("abbr",{attrs:{title:"Pull Request"}},[e._v("PR")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);